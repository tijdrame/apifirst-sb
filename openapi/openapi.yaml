openapi: 3.1.0
info:
  version: 1.0.0
  title: API First with Spring Boot
  termsOfService: https://example.com/terms/
  contact:
    name: tijdrame@gmail.com
    email: contact@example.com
    url: http://example.com/contact
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  x-logo:
    url: "https://redocly.github.io/openapi-template/logo.png"
    altText: OpenAPI example logo
  description: >
    This is an **example** API to demonstrate features of the OpenAPI
    specification.
    guesswork in calling the service.
externalDocs:
  description: "Find out how to create a GitHub repo for your OpenAPI definition."
  url: "https://github.com/Redocly/create-openapi-repo"
tags:
  - name: Customer
    description: "Customer operations."
  - name: Product
    description: "Product operations."

servers:
  - url: https://{tenant}/api/v1
    variables:
      tenant:
        default: www
        description: Your tenant id
  - url: https://example.com/api/v1
paths:
  "/v1/customers":
    $ref: "paths/v1/customers.yaml"
  "/v1/customers/{customer_id}":
    $ref: "paths/v1/customers_{customer_id}.yaml"
  "/v1/products":
    $ref: "paths/v1/products.yaml"
  "/v1/products/{products_id}":
    $ref: "paths/v1/products_{products_id}.yaml"

components:
  securitySchemes:
    main_auth:
      description: "Example description text of the OAuth2 scheme."
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://example.com/api/oauth/dialog
          scopes:
            "read:users": read user info
            "write:users": modify or remove users
    api_key:
      description: "Example description text of the API key scheme."
      type: apiKey
      in: header
      name: api_key
    basic_auth:
      type: http
      scheme: basic
